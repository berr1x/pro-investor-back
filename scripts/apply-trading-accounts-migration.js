const fs = require('fs');
const path = require('path');
const pool = require('../config/database');

async function applyMigration() {
  try {
    console.log('üöÄ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã —Ç–æ—Ä–≥–æ–≤—ã—Ö —Å—á–µ—Ç–æ–≤...');

    // –ß–∏—Ç–∞–µ–º SQL —Ñ–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–∏
    const migrationPath = path.join(__dirname, '../migrations/create_trading_accounts.sql');
    const migrationSQL = fs.readFileSync(migrationPath, 'utf8');

    // –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
    await pool.query(migrationSQL);

    console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞!');
    console.log('üìä –¢–∞–±–ª–∏—Ü–∞ user_trading_accounts —Å–æ–∑–¥–∞–Ω–∞');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–ª–∞—Å—å
    const result = await pool.query(`
      SELECT table_name, column_name, data_type, is_nullable, column_default
      FROM information_schema.columns 
      WHERE table_name = 'user_trading_accounts'
      ORDER BY ordinal_position
    `);

    console.log('\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã user_trading_accounts:');
    console.table(result.rows);

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ—Ä–≥–æ–≤—ã–π —Å—á–µ—Ç (–µ—Å–ª–∏ –µ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏)
    const users = await pool.query('SELECT id FROM users LIMIT 1');
    
    if (users.rows.length > 0) {
      const userId = users.rows[0].id;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Å—á–µ—Ç–∞ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const existingAccount = await pool.query(
        'SELECT * FROM user_trading_accounts WHERE userId = $1',
        [userId]
      );

      if (existingAccount.rows.length === 0) {
        const testAccount = await pool.query(`
          INSERT INTO user_trading_accounts (userId, account_number, currency, profit, percentage)
          VALUES ($1, $2, $3, $4, $5)
          RETURNING *
        `, [userId, 'TR' + Date.now(), 'USD', 1250.50, 12.5]);

        console.log('\nüéØ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ—Ä–≥–æ–≤—ã–π —Å—á–µ—Ç:');
        console.table(testAccount.rows);
      } else {
        console.log('\nüìù –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å —Ç–æ—Ä–≥–æ–≤—ã–µ —Å—á–µ—Ç–∞:');
        console.table(existingAccount.rows);
      }
    } else {
      console.log('\n‚ö†Ô∏è  –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Å—á–µ—Ç–∞');
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
    process.exit(1);
  } finally {
    await pool.end();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
applyMigration();