const axios = require('axios');

const BASE_URL = 'http://localhost:5000/api';

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const testUser = {
  email: 'test-accounts@example.com',
  password: 'TestPass123',
  firstName: '–¢–µ—Å—Ç',
  lastName: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
  middleName: '–¢–µ—Å—Ç–æ–≤–∏—á'
};

let authToken = '';

async function testAccountFeatures() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π —Å—á–µ—Ç–æ–≤...\n');

  try {
    // 1. –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
    console.log('1. –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è...');
    try {
      const loginResponse = await axios.post(`${BASE_URL}/auth/login`, {
        email: testUser.email,
        password: testUser.password
      });
      console.log('‚úÖ –í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω');
      authToken = loginResponse.data.token;
    } catch (error) {
      if (error.response?.status === 401) {
        const registerResponse = await axios.post(`${BASE_URL}/auth/register`, testUser);
        console.log('‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');
        authToken = registerResponse.data.token;
      } else {
        throw error;
      }
    }

    const headers = { Authorization: `Bearer ${authToken}` };

    // 2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å—á–µ—Ç–æ–≤
    console.log('\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å—á–µ—Ç–æ–≤...');
    try {
      const accountsResponse = await axios.get(`${BASE_URL}/accounts`, { headers });
      console.log('‚úÖ –°—á–µ—Ç–∞ –ø–æ–ª—É—á–µ–Ω—ã:', accountsResponse.data.accounts.length, '—Å—á–µ—Ç–æ–≤');
      console.log('   –û–±—â–∏–π –±–∞–ª–∞–Ω—Å:', accountsResponse.data.totalBalance, 'RUB');
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ —Å—á–µ—Ç–æ–≤
      accountsResponse.data.accounts.forEach((account, index) => {
        console.log(`   –°—á–µ—Ç ${index + 1}:`);
        console.log(`     –ù–æ–º–µ—Ä: ${account.account_number}`);
        console.log(`     –ë–∞–ª–∞–Ω—Å: ${account.balance} ${account.currency}`);
        console.log(`     –ë–∞–Ω–∫: ${account.bank || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
        console.log(`     –ë–ò–ö: ${account.bik_or_bankname || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
        console.log(`     –ò–ù–ù: ${account.inn || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
        console.log(`     –ö–ü–ü: ${account.kpp || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
      });
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—á–µ—Ç–æ–≤:', error.response?.data?.message);
    }

    // 3. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å—á–µ—Ç–∞ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
    console.log('\n3. –°–æ–∑–¥–∞–Ω–∏–µ —Å—á–µ—Ç–∞ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏...');
    try {
      const createAccountResponse = await axios.post(`${BASE_URL}/accounts`, {
        bank: '–°–±–µ—Ä–±–∞–Ω–∫ –†–æ—Å—Å–∏–∏',
        bik_or_bankname: '044525225',
        currency: 'RUB'
      }, { headers });
      console.log('‚úÖ –°—á–µ—Ç —Å–æ–∑–¥–∞–Ω —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏');
      console.log('   –ù–æ–º–µ—Ä —Å—á–µ—Ç–∞:', createAccountResponse.data.account.account_number);
      console.log('   –ë–∞–Ω–∫:', createAccountResponse.data.account.bank);
      console.log('   –ë–ò–ö:', createAccountResponse.data.account.bik_or_bankname);
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—á–µ—Ç–∞:', error.response?.data?.message);
    }

    // 4. –°–æ–∑–¥–∞–Ω–∏–µ —Å—á–µ—Ç–∞ —Å–æ –≤—Å–µ–º–∏ –ø–æ–ª—è–º–∏
    console.log('\n4. –°–æ–∑–¥–∞–Ω–∏–µ —Å—á–µ—Ç–∞ —Å–æ –≤—Å–µ–º–∏ –ø–æ–ª—è–º–∏...');
    try {
      const createFullAccountResponse = await axios.post(`${BASE_URL}/accounts`, {
        bank: '–í–¢–ë',
        bik_or_bankname: '044525187',
        currency: 'USD',
        number: '40817810123456789012',
        bankname: '–í–¢–ë (–ü–ê–û)',
        inn: '7702070139',
        kpp: '770201001',
        corp_bank_account: '40702810123456789012'
      }, { headers });
      console.log('‚úÖ –°—á–µ—Ç —Å–æ–∑–¥–∞–Ω —Å–æ –≤—Å–µ–º–∏ –ø–æ–ª—è–º–∏');
      console.log('   –ù–æ–º–µ—Ä —Å—á–µ—Ç–∞:', createFullAccountResponse.data.account.account_number);
      console.log('   –ë–∞–Ω–∫:', createFullAccountResponse.data.account.bank);
      console.log('   –ë–ò–ö:', createFullAccountResponse.data.account.bik_or_bankname);
      console.log('   –ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã:', createFullAccountResponse.data.account.number);
      console.log('   –ù–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞:', createFullAccountResponse.data.account.bankname);
      console.log('   –ò–ù–ù:', createFullAccountResponse.data.account.inn);
      console.log('   –ö–ü–ü:', createFullAccountResponse.data.account.kpp);
      console.log('   –ö–æ—Ä–ø. —Å—á–µ—Ç:', createFullAccountResponse.data.account.corp_bank_account);
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ —Å—á–µ—Ç–∞:', error.response?.data?.message);
    }

    // 5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    console.log('\n5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏...');
    
    // –¢–µ—Å—Ç –±–µ–∑ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    try {
      await axios.post(`${BASE_URL}/accounts`, {
        currency: 'RUB'
      }, { headers });
      console.log('‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞ –¥–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª–µ–π!');
    } catch (error) {
      if (error.response?.status === 400) {
        console.log('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç - –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
      } else {
        console.log('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:', error.response?.data?.message);
      }
    }

    // –¢–µ—Å—Ç —Å –Ω–µ–≤–µ—Ä–Ω—ã–º –ò–ù–ù
    try {
      await axios.post(`${BASE_URL}/accounts`, {
        bank: '–¢–µ—Å—Ç –ë–∞–Ω–∫',
        bik_or_bankname: '123456789',
        currency: 'RUB',
        inn: '123' // –Ω–µ–≤–µ—Ä–Ω—ã–π –ò–ù–ù
      }, { headers });
      console.log('‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –ò–ù–ù –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞!');
    } catch (error) {
      if (error.response?.status === 400) {
        console.log('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –ò–ù–ù —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
      } else {
        console.log('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ò–ù–ù:', error.response?.data?.message);
      }
    }

    // 6. –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ —Å—á–µ—Ç–æ–≤
    console.log('\n6. –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ —Å—á–µ—Ç–æ–≤...');
    try {
      const updatedAccountsResponse = await axios.get(`${BASE_URL}/accounts`, { headers });
      console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Å—á–µ—Ç–∞ –ø–æ–ª—É—á–µ–Ω—ã:', updatedAccountsResponse.data.accounts.length, '—Å—á–µ—Ç–æ–≤');
      console.log('   –û–±—â–∏–π –±–∞–ª–∞–Ω—Å:', updatedAccountsResponse.data.totalBalance, 'RUB');
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —Å—á–µ—Ç–∞ —Å –Ω–æ–≤—ã–º–∏ –ø–æ–ª—è–º–∏
      updatedAccountsResponse.data.accounts.forEach((account, index) => {
        console.log(`\n   –°—á–µ—Ç ${index + 1}:`);
        console.log(`     –ù–æ–º–µ—Ä: ${account.account_number}`);
        console.log(`     –ë–∞–ª–∞–Ω—Å: ${account.balance} ${account.currency}`);
        console.log(`     –ë–∞–Ω–∫: ${account.bank}`);
        console.log(`     –ë–ò–ö/–ù–∞–∑–≤–∞–Ω–∏–µ: ${account.bik_or_bankname}`);
        if (account.number) console.log(`     –ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã: ${account.number}`);
        if (account.bankname) console.log(`     –ù–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞: ${account.bankname}`);
        if (account.inn) console.log(`     –ò–ù–ù: ${account.inn}`);
        if (account.kpp) console.log(`     –ö–ü–ü: ${account.kpp}`);
        if (account.corp_bank_account) console.log(`     –ö–æ—Ä–ø. —Å—á–µ—Ç: ${account.corp_bank_account}`);
      });
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å—á–µ—Ç–æ–≤:', error.response?.data?.message);
    }

    // 7. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—á–µ—Ç–∞
    console.log('\n7. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—á–µ—Ç–∞...');
    try {
      const accountsResponse = await axios.get(`${BASE_URL}/accounts`, { headers });
      if (accountsResponse.data.accounts.length > 0) {
        const firstAccountId = accountsResponse.data.accounts[0].id;
        const accountResponse = await axios.get(`${BASE_URL}/accounts/${firstAccountId}`, { headers });
        console.log('‚úÖ –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å—á–µ—Ç –ø–æ–ª—É—á–µ–Ω');
        console.log('   –ù–æ–º–µ—Ä:', accountResponse.data.account.account_number);
        console.log('   –ë–∞–Ω–∫:', accountResponse.data.account.bank);
        console.log('   –ë–ò–ö:', accountResponse.data.account.bik_or_bankname);
      }
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—á–µ—Ç–∞:', error.response?.data?.message);
    }

    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π —Å—á–µ—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('\nüìã –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:');
    console.log('   ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Å—á–µ—Ç–æ–≤ —Å –±–∞–Ω–∫–æ–≤—Å–∫–∏–º–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏');
    console.log('   ‚úÖ –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: bank, bik_or_bankname, currency');
    console.log('   ‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: number, bankname, inn, kpp, corp_bank_account');
    console.log('   ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –ò–ù–ù (10 –∏–ª–∏ 12 —Ü–∏—Ñ—Ä)');
    console.log('   ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –ö–ü–ü (9 —Ü–∏—Ñ—Ä)');
    console.log('   ‚úÖ –û–±—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ –≤—Å–µ–º —Å—á–µ—Ç–∞–º');
    console.log('   ‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª–µ–π —Å—á–µ—Ç–∞');

  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    if (error.response) {
      console.error('   –°—Ç–∞—Ç—É—Å:', error.response.status);
      console.error('   –î–∞–Ω–Ω—ã–µ:', error.response.data);
    }
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
testAccountFeatures();